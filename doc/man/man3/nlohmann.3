.TH "nlohmann" 3 "Fri Sep 1 2017" "Version 1.0" "COM-Express I2C Stack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nlohmann \- namespace for Niels Lohmann  

.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBdetail\fP"
.br
.RI "\fIunnamed namespace with internal helper functions \fP"
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBadl_serializer\fP"
.br
.RI "\fIdefault JSONSerializer template argument \fP"
.ti -1c
.RI "class \fBbasic_json\fP"
.br
.RI "\fIa class to store JSON values \fP"
.ti -1c
.RI "class \fBjson_pointer\fP"
.br
.RI "\fIJSON Pointer\&. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "using \fBjson\fP = \fBbasic_json\fP<>"
.br
.RI "\fIdefault JSON class \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBoperator==\fP (\fBjson_pointer\fP const &lhs, \fBjson_pointer\fP const &rhs) noexcept"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (\fBjson_pointer\fP const &lhs, \fBjson_pointer\fP const &rhs) noexcept"
.br
.in -1c
.SH "Detailed Description"
.PP 
namespace for Niels Lohmann 


.PP
\fBSee also:\fP
.RS 4
https://github.com/nlohmann 
.RE
.PP
\fBSince:\fP
.RS 4
version 1\&.0\&.0 
.RE
.PP

.SH "Typedef Documentation"
.PP 
.SS "using \fBnlohmann::json\fP = typedef \fBbasic_json\fP<>"

.PP
default JSON class This type is the default specialization of the \fBbasic_json\fP class which uses the standard template types\&.
.PP
\fBSince:\fP
.RS 4
version 1\&.0\&.0 
.RE
.PP

.PP
Definition at line 14046 of file json\&.hpp\&.
.SH "Function Documentation"
.PP 
.SS "bool nlohmann::operator!= (\fBjson_pointer\fP const & lhs, \fBjson_pointer\fP const & rhs)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Definition at line 14447 of file json\&.hpp\&.
.SS "bool nlohmann::operator== (\fBjson_pointer\fP const & lhs, \fBjson_pointer\fP const & rhs)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Definition at line 14442 of file json\&.hpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for COM-Express I2C Stack from the source code\&.
