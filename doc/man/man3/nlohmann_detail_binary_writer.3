.TH "nlohmann::detail::binary_writer< BasicJsonType, CharType >" 3 "Fri Sep 1 2017" "Version 1.0" "COM-Express I2C Stack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nlohmann::detail::binary_writer< BasicJsonType, CharType > \- serialization to CBOR and MessagePack values  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <json\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBbinary_writer\fP (\fBoutput_adapter_t\fP< CharType > adapter)"
.br
.RI "\fIcreate a binary writer \fP"
.ti -1c
.RI "void \fBwrite_cbor\fP (const BasicJsonType &j)"
.br
.RI "\fI[in] j JSON value to serialize \fP"
.ti -1c
.RI "void \fBwrite_msgpack\fP (const BasicJsonType &j)"
.br
.RI "\fI[in] j JSON value to serialize \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename BasicJsonType, typename CharType>
.br
class nlohmann::detail::binary_writer< BasicJsonType, CharType >"
serialization to CBOR and MessagePack values 
.PP
Definition at line 5593 of file json\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename BasicJsonType , typename CharType > \fBnlohmann::detail::binary_writer\fP< BasicJsonType, CharType >::\fBbinary_writer\fP (\fBoutput_adapter_t\fP< CharType > adapter)\fC [inline]\fP, \fC [explicit]\fP"

.PP
create a binary writer 
.PP
\fBParameters:\fP
.RS 4
\fIadapter\fP output adapter to write to 
.RE
.PP

.PP
Definition at line 5601 of file json\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename BasicJsonType , typename CharType > void \fBnlohmann::detail::binary_writer\fP< BasicJsonType, CharType >::write_cbor (const BasicJsonType & j)\fC [inline]\fP"

.PP
[in] j JSON value to serialize 
.PP
Definition at line 5609 of file json\&.hpp\&.
.SS "template<typename BasicJsonType , typename CharType > void \fBnlohmann::detail::binary_writer\fP< BasicJsonType, CharType >::write_msgpack (const BasicJsonType & j)\fC [inline]\fP"

.PP
[in] j JSON value to serialize 
.PP
Definition at line 5856 of file json\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for COM-Express I2C Stack from the source code\&.
